package client;

import java.awt.BorderLayout;
import java.awt.Choice;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import java.awt.SystemColor;
import javax.swing.JLabel;
import javax.swing.ImageIcon;
import java.awt.Window.Type;
import java.awt.Color;

public class GuiClient extends JFrame {
	private JButton sendButton;
	private JButton closeButton;
	private JTextArea receiveMsg;
	private JTextArea sendMsg;

	private GuiClient frm;
	private Choice clientList;
	

	public String getSendMsg() {
		return sendMsg.getText();
	}

    public String getDes()
    {
    	 return clientList.getSelectedItem();
    		 
    }


	public GuiClient(String str) {
		super(str);
		setAutoRequestFocus(false);
		setResizable(false);
		setType(Type.POPUP);
		setAlwaysOnTop(true);
		frm = this;

		clientList = new Choice();
		this.clientList.add("ALL           ");

		this.sendButton = new JButton("发送");
		this.closeButton = new JButton("退出");
		listenSendButton(Client.c);
		listenCloseButton(Client.c);

		JPanel p = new JPanel();
		JPanel p1 = new JPanel();
		JPanel p2 = new JPanel();
		p2.setBackground(new Color(169, 169, 169));
		JPanel p3 = new JPanel();

		frm.getContentPane().add(p);
		p.setLayout(new BorderLayout());
		p.add(p1, "North");
		p.add(p2, "Center");
		p2.setLayout(null);
		p.add(p3, "South");

		p1.setLayout(new FlowLayout());
		p1.add(clientList);
				
						receiveMsg = new JTextArea(5, 20);
						receiveMsg.setBounds(9, 87, 240, 80);
						p2.add(receiveMsg);
						this.receiveMsg.setText(" ");
				sendMsg = new JTextArea(5, 20);
				sendMsg.setBounds(9, 179, 240, 80);
				p2.add(sendMsg);
				
						this.sendMsg.setText(" ");
						
						JButton btnNewButton = new JButton("");
						btnNewButton.setIcon(new ImageIcon(GuiClient.class.getResource("/img/1.png")));
						btnNewButton.setBounds(202, 6, 56, 56);
						p2.add(btnNewButton);

		p3.setLayout(new FlowLayout());
		p3.add(this.sendButton);
		p3.add(this.closeButton);

		frm.getContentPane().add(p);

	}

	public void addRcvMessage(String message)
	{
		receiveMsg.setText(receiveMsg.getText()+message+"\n");
	}

	public void showFrame() {
		Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
		Dimension frameSize = frm.getSize();
		frm.setLocation((screenSize.width - frameSize.width - 200) / 2,
				(screenSize.height - frameSize.height - 100) / 2);
		frm.pack();
		frm.setVisible(true);
	}

	public void listenSendButton(final Client b) {

		this.sendButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				b.send();
			}
		});
	}

	public void listenCloseButton(final Client b) {

		this.closeButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				b.quit();
			}
		});
	}
	
	public void setSendMsgClear()
	{
		sendMsg.setText("");
	}
	
	public void setChoiceText(String str)
	{
		clientList.add(str);
	}
	
	public static void main(String[] args) {
		Client c=new Client();
		
		GuiClient gc=new GuiClient("name");
		gc.showFrame();
		System.out.println(gc.getDes());
		System.out.println(gc.getSendMsg());
	}
}